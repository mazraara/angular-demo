{"ast":null,"code":"import _classCallCheck from \"/Users/gapstars/Documents/Projects/ngrx-12-finished/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/gapstars/Documents/Projects/ngrx-12-finished/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport { ActivatedRouteSnapshot, RouterStateSnapshot, Router, UrlTree } from '@angular/router';\nimport { map, take } from 'rxjs/operators';\nimport { Store } from '@ngrx/store';\nimport { AuthService } from './auth.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./auth.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@ngrx/store\";\nexport var AuthGuard = /*#__PURE__*/(function () {\n  var AuthGuard = /*#__PURE__*/function () {\n    function AuthGuard(authService, router, store) {\n      _classCallCheck(this, AuthGuard);\n\n      this.authService = authService;\n      this.router = router;\n      this.store = store;\n    }\n\n    _createClass(AuthGuard, [{\n      key: \"canActivate\",\n      value: function canActivate(route, router) {\n        var _this = this;\n\n        return this.store.select('auth').pipe(take(1), map(function (authState) {\n          return authState.user;\n        }), map(function (user) {\n          var isAuth = !!user;\n\n          if (isAuth) {\n            return true;\n          }\n\n          return _this.router.createUrlTree(['/auth']);\n        }) // tap(isAuth => {\n        //   if (!isAuth) {\n        //     this.router.navigate(['/auth']);\n        //   }\n        // })\n        );\n      }\n    }]);\n\n    return AuthGuard;\n  }();\n\n  AuthGuard.ɵfac = function AuthGuard_Factory(t) {\n    return new (t || AuthGuard)(i0.ɵɵinject(i1.AuthService), i0.ɵɵinject(i2.Router), i0.ɵɵinject(i3.Store));\n  };\n\n  AuthGuard.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthGuard,\n    factory: AuthGuard.ɵfac,\n    providedIn: 'root'\n  });\n  return AuthGuard;\n})();","map":null,"metadata":{},"sourceType":"module"}